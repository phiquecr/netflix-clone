[{"/home/vainaweb28/Documentos/netflix-clone/src/server/index.js":"1","/home/vainaweb28/Documentos/netflix-clone/src/index.js":"2","/home/vainaweb28/Documentos/netflix-clone/src/server/data/shows.js":"3","/home/vainaweb28/Documentos/netflix-clone/src/App.js":"4","/home/vainaweb28/Documentos/netflix-clone/src/server/data/movies.js":"5"},{"size":866,"mtime":1607013943816,"results":"6","hashOfConfig":"7"},{"size":294,"mtime":1606478757242,"results":"8","hashOfConfig":"7"},{"size":13929,"mtime":1607013947532,"results":"9","hashOfConfig":"7"},{"size":2400,"mtime":1607710617218,"results":"10","hashOfConfig":"7"},{"size":13969,"mtime":1607013945804,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1v9uisk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vainaweb28/Documentos/netflix-clone/src/server/index.js",[],["25","26"],"/home/vainaweb28/Documentos/netflix-clone/src/index.js",[],["27","28"],"/home/vainaweb28/Documentos/netflix-clone/src/server/data/shows.js",[],"/home/vainaweb28/Documentos/netflix-clone/src/App.js",["29","30","31","32","33","34"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport Logo from './logo.png';\n\n\n\nclass Netflix extends Component {\n  state = {\n\n    movies: [],\n    shows: [],\n    images: [],\n    date: []\n    \n  }\n\n  async componentDidMount(){\n\n\n    const responseMovies = await axios.get(`${process.env.REACT_APP_API}/movies`);\n    console.log(responseMovies.data);\n\n    const filmes = responseMovies.data.map((item) => {\n      return {\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n\n    this.setState({\n      movies: responseMovies.data\n    })\n\n    this.setState({\n      images: responseMovies.data.poster_path\n    });\n\n\n\n\n\n    \n    const responseShows = await axios.get(`${process.env.REACT_APP_API}/shows`);\n    console.log(responseShows.data);\n\n    const series = responseShows.data.map((item) => {\n      return {\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n\n    this.setState({\n      shows: responseShows.data\n    })\n\n    this.setState({\n      images: responseMovies.data.poster_path\n    });\n\n\n\n\n\n\n    \n\n  }\n\n     \n\n  \n  \n\n\n  render() {\n    return(\n      <div>\n        <header>\n            <img className=\"icon_logoNetflix\" src={Logo} alt=\"Logo Netflix\" />\n        </header>\n        <h1 className=\"titleIndicator\">Filmes</h1>\n        <div className=\"box_films\">\n          {this.state.movies.map((item, index) => (\n            <div className=\"box_content\" key={index}>\n              <a href=\"\"><img className=\"netflixImages\" src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}/></a>\n              <p className=\"releaseDate_now\">{item.release_date}</p>\n              <p className=\"netflixTitles\">{item.title}</p>\n              \n            </div>\n          ))}\n        </div>\n        <h1 className=\"titleIndicator\">Series</h1>\n        <div className=\"box_series\">\n          {this.state.shows.map((item, index) => (\n            <div className=\"box_content\" key={index}>\n              <a href=\"\"><img className=\"netflixImages\" src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}/></a>\n              <p className=\"releaseDate_now\">{item.first_air_date}</p>\n              <p className=\"netflixTitles\">{item.original_name}</p>\n            </div>\n          ))}\n        </div>\n      </div>         \n    )\n  }\n}\n\nexport default Netflix;\n","/home/vainaweb28/Documentos/netflix-clone/src/server/data/movies.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"35","replacedBy":"39"},{"ruleId":"37","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":24,"column":11,"nodeType":"43","messageId":"44","endLine":24,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":47,"column":11,"nodeType":"43","messageId":"44","endLine":47,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":87,"column":15,"nodeType":"48","endLine":87,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":87,"column":26,"nodeType":"48","endLine":87,"endColumn":117},{"ruleId":"46","severity":1,"message":"47","line":98,"column":15,"nodeType":"48","endLine":98,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":98,"column":26,"nodeType":"48","endLine":98,"endColumn":117},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],["51"],["52"],"no-unused-vars","'filmes' is assigned a value but never used.","Identifier","unusedVar","'series' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]