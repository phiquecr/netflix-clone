[{"/home/vainaweb28/Documentos/netflix-clone/src/server/index.js":"1","/home/vainaweb28/Documentos/netflix-clone/src/index.js":"2","/home/vainaweb28/Documentos/netflix-clone/src/server/data/shows.js":"3","/home/vainaweb28/Documentos/netflix-clone/src/App.js":"4","/home/vainaweb28/Documentos/netflix-clone/src/server/data/movies.js":"5"},{"size":866,"mtime":1606483637305,"results":"6","hashOfConfig":"7"},{"size":294,"mtime":1606478757242,"results":"8","hashOfConfig":"7"},{"size":13929,"mtime":1606478757242,"results":"9","hashOfConfig":"7"},{"size":1987,"mtime":1606846018748,"results":"10","hashOfConfig":"7"},{"size":13969,"mtime":1606478757242,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v9uisk",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/vainaweb28/Documentos/netflix-clone/src/server/index.js",[],"/home/vainaweb28/Documentos/netflix-clone/src/index.js",[],["24","25"],"/home/vainaweb28/Documentos/netflix-clone/src/server/data/shows.js",[],"/home/vainaweb28/Documentos/netflix-clone/src/App.js",["26","27","28","29"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div``;\n\n\n\nclass Netflix extends Component {\n  state = {\n\n    movies: [],\n    shows: [],\n    images: []\n    \n  }\n\n  async componentDidMount(){\n\n\n    const responseMovies = await axios.get(`${process.env.REACT_APP_API}/movies`);\n    // console.log(responseMovies.data);\n\n    const filmes = responseMovies.data.map((item) => {\n      return {\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n\n    this.setState({\n      movies: responseMovies.data\n    })\n\n    this.setState({\n      images: responseMovies.data.poster_path\n    });\n\n    // console.log(filmes);\n\n\n\n    \n    const responseShows = await axios.get(`${process.env.REACT_APP_API}/shows`);\n    // console.log(responseShows.data);\n\n    const series = responseShows.data.map((item) => {\n      return {\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n\n    this.setState({\n      shows: responseShows.data\n    })\n\n    this.setState({\n      images: responseMovies.data.poster_path\n    });\n\n    // console.log(series);\n\n\n\n\n    \n\n  }\n\n     \n\n  \n  \n\n\n  render() {\n    return(\n      <Container>\n        <div>\n          {this.state.movies.map((item, index) => (\n            <div key={index}>\n              <p className=\"netflixTitles\">{item.title}</p>\n              <img className=\"netflixImages\" src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}/>\n            </div>\n          ))}\n        </div>\n        <div>\n          {this.state.shows.map((item, index) => (\n            <div key={index}>\n              <p className=\"netflixTitles\">{item.original_name}</p>\n              <img className=\"netflixImages\" src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}/>\n            </div>\n          ))}\n        </div>\n          \n      </Container>\n    )\n  }\n}\n\nexport default Netflix;\n","/home/vainaweb28/Documentos/netflix-clone/src/server/data/movies.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":25,"column":11,"nodeType":"36","messageId":"37","endLine":25,"endColumn":17},{"ruleId":"34","severity":1,"message":"38","line":48,"column":11,"nodeType":"36","messageId":"37","endLine":48,"endColumn":17},{"ruleId":"39","severity":1,"message":"40","line":85,"column":15,"nodeType":"41","endLine":85,"endColumn":106},{"ruleId":"39","severity":1,"message":"40","line":93,"column":15,"nodeType":"41","endLine":93,"endColumn":106},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'filmes' is assigned a value but never used.","Identifier","unusedVar","'series' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]